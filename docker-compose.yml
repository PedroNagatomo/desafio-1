
services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: hypesoft-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-HypesoftDB}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - hypesoft-network

  # MongoDB Express (GUI para MongoDB)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: hypesoft-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-admin123}
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - hypesoft-network

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: hypesoft-keycloak
    restart: unless-stopped
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak123}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
    - "8080:8080"
    volumes:
    - ./docker/keycloak/import:/opt/keycloak/data/import
    - keycloak_data:/opt/keycloak/data
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
    - hypesoft-network

  # PostgreSQL para Keycloak
  keycloak-db:
    image: postgres:15
    container_name: hypesoft-keycloak-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME:-keycloak}
      POSTGRES_USER: ${KEYCLOAK_DB_USERNAME:-keycloak}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak123}
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - hypesoft-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USERNAME:-keycloak} -d ${KEYCLOAK_DB_NAME:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: hypesoft-backend
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNET_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://+:8000
      MongoDbSettings__ConnectionString: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017
      MongoDbSettings__DatabaseName: ${MONGO_DATABASE:-HypesoftDB}
      Keycloak__Authority: http://keycloak:8080/realms/${KEYCLOAK_REALM:-hypesoft}
      Keycloak__Audience: ${KEYCLOAK_CLIENT_ID:-hypesoft-api}
      Keycloak__RequireHttpsMetadata: false
      CORS__AllowedOrigins__0: http://localhost:3000
      CORS__AllowedOrigins__1: http://frontend:3000
    ports:
      - "5000:8000"
    depends_on:
      - mongodb
      - keycloak
    networks:
      - hypesoft-network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
      target: ${FRONTEND_TARGET:-development}
    container_name: hypesoft-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: ${FRONTEND_API_URL:-http://localhost:5000/api}
      VITE_KEYCLOAK_URL: ${FRONTEND_KEYCLOAK_URL:-http://localhost:8080}
      VITE_KEYCLOAK_REALM: ${KEYCLOAK_REALM:-hypesoft}
      VITE_KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-hypesoft-frontend}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - hypesoft-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: hypesoft-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
      - keycloak
    networks:
      - hypesoft-network

volumes:
  mongodb_data:
  keycloak_data:
  keycloak_db_data:

networks:
  hypesoft-network:
    driver: bridge